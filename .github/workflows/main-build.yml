# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# Find more information at:
# https://github.com/microsoft/msvc-code-analysis-action

name: zed windows build

on:
  workflow_dispatch:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
  schedule:
    - cron: '23 00 * * *'

env:
  # Path to the CMake build directory.
  build: '${{ github.workspace }}/build'

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-2022
    # Run a job for each of the specified target architectures:
    strategy:
      matrix:
        arch:
          - amd64
          # - amd64_x86
          # - amd64_arm64
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: clone zed repo
        uses: actions/checkout@v4
        with:
          repository: zed-industries/zed
          path: zed
      - name: patch zed
        shell: cmd
        run: |
          cd zed
          git config user.name "zed-windows-build"
          git config user.email "zed-windows-build@github.com"
          git reset --hard HEAD
          git am --abort
          for /r "patchs" %%f in (*.patch) do git am %%f
      - name: setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          target: wasm32-wasi
      - name: setup rust cache
        uses: Swatinem/rust-cache@v2.7.3
      - name: setup windows build tools
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
          sdk: 10.0.20348.0
          # toolset: 14.11
      - name: Install Vulkan SDK
        uses: jakoch/install-vulkan-sdk-action@v1.0.0
        with:
          # You can set the Vulkan SDK version to download.
          # Defaults to latest version, if version not set.
          vulkan_version: 1.3.231.1
          optional_components: com.lunarg.vulkan.vma
          install_runtime: true
          cache: true
          stripdown: true
      - name: fixed long path
        shell: pwsh
        run: |
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force
      - name: build zed
        run: |
          git config --system core.longpaths true
          ls
          cd zed
          rustup target add wasm32-wasip1
          cargo build --release
      - name: upload artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: zed-${{ matrix.arch }}
          path: zed/target/release/zed.exe

      - name: create release artifact
        run: tar -c -f zed-${{ matrix.arch }}-windows.zip zed/target/release
        
      - name: set cur date
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        
      - name: Upload release build artifact to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.DATE }}
          tag_name: ${{ matrix.arch }}-win
          draft: false
          make_latest: true
          files: zed-${{ matrix.arch }}-windows.zip
