# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# Find more information at:
# https://github.com/microsoft/msvc-code-analysis-action

name: zed windows build - latest

on:
  workflow_dispatch:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
  schedule:
    - cron: '23 00 * * *'

env:
  # Path to the CMake build directory.
  build: '${{ github.workspace }}/build'

permissions:
  contents: read

jobs:
  get:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: clone zed repo
        uses: actions/checkout@v4
        with:
          repository: zed-industries/zed
          path: zed
          fetch-depth: 500
          fetch-tags: true
      - name: Get latest tag
        run: |
          cd zed
          latest_v_tag=$(git tag --sort=v:refname -l 'v*' | tail -1)
          latest_tag=$(git describe --tags $latest_v_tag)
          echo "Latest tag is: ${latest_tag}"
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
          echo $latest_tag > TAG
      - name: upload source to artifact
        uses: actions/upload-artifact@v4
        with:
          name: zed-source
          path: zed/
  build:
    needs: get
    runs-on: windows-2022
    # Run a job for each of the specified target architectures:
    strategy:
      matrix:
        arch:
          - amd64
          # - amd64_x86
          # - amd64_arm64
    permissions:
      contents: write
    steps:
      - name: Download latest source artifact
        uses: actions/download-artifact@v4
        with:
          name: zed-source
          path: zed
      - name: Get latest tag
        run: |
          cd zed
          $latest_tag = Get-Content -Path "./TAG" -Raw
          echo "Latest tag is: ${latest_tag}"
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      - name: setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          target: wasm32-wasi
      - name: setup rust cache
        uses: Swatinem/rust-cache@v2.7.3
        with:
          workspaces: |
            zed/
      - name: setup windows build tools
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
          sdk: 10.0.20348.0
          # toolset: 14.11
      - name: Install Vulkan SDK
        uses: jakoch/install-vulkan-sdk-action@v1.0.0
        with:
          # You can set the Vulkan SDK version to download.
          # Defaults to latest version, if version not set.
          vulkan_version: 1.3.231.1
          optional_components: com.lunarg.vulkan.vma
          install_runtime: true
          cache: true
          stripdown: true
      - name: fixed long path
        shell: pwsh
        run: |
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force
      - name: build zed
        run: |
          git config --system core.longpaths true
          ls
          cd zed
          rustup target add wasm32-wasip1
          cargo build --release
      - name: upload artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: zed-${{ matrix.arch }}-version-${{ env.LATEST_TAG }}
          path: zed/target/release/zed.exe
      - name: create release artifact
        run: zip -r zed-windows-${{ env.LATEST_TAG }}.zip zed/target/*
      - name: release
        uses: softprops/action-gh-release@v2
        with:
          name: "${{ env.LATEST_TAG }}"
          tag_name: "${{ env.LATEST_TAG }}"
          files: |
            target/zed.exe

          
