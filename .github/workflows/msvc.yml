# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# Find more information at:
# https://github.com/microsoft/msvc-code-analysis-action

name: zed windows build

on:
  workflow_dispatch:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
  schedule:
    - cron: '23 15 * * 3'

env:
  # Path to the CMake build directory.
  build: '${{ github.workspace }}/build'

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-2022
    # Run a job for each of the specified target architectures:
    strategy:
      matrix:
        arch:
          - amd64
          # - amd64_x86
          # - amd64_arm64
    steps:
      - uses: actions/checkout@v4
      - name: clone zed repo
        uses: actions/checkout@v4
        with:
          repository: zed-industries/zed
          path: zed
      - name: restore build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo
      - name: Setup Rust Toolchain for GitHub CI
        # You may pin to the exact commit or the version.
        # uses: actions-rust-lang/setup-rust-toolchain@11df97af8e8102fd60b60a77dfbf58d40cd843b8
        uses: actions-rust-lang/setup-rust-toolchain@v1.10.1
        #with:
          # Comma-separated list of Rust toolchain specifications. Last version becomes the default. -- see https://rust-lang.github.io/rustup/concepts/toolchains.html#toolchain-specification
          #toolchain: # optional
          # Target triple to install for this toolchain
          #target:  # optional
          # Comma-separated list of components to be additionally installed
          #components: # optional
          # Automatically configure Rust cache
          #cache: true # optional, default is true
          # Paths to multiple Cargo workspaces and their target directories, separated by newlines.
          #cache-workspaces: | # optional
          # Additional non workspace directories to be cached, separated by newlines.
          #cache-directories: | # optional
          # Also cache on workflow failures
          #cache-on-failure:  # optional, default is true
          # An additional cache key that is added alongside the automatic `job`-based cache key and can be used to further differentiate jobs.
          #cache-key: # optional
          # Enable the Rust problem matcher
          #matcher: # optional, default is true
          # set RUSTFLAGS environment variable, set to empty string to avoid overwriting build.rustflags
          #ustflags: # optional, default is -D warnings
          # Setup the last installed toolchain as the default via `rustup override`
          #override: # optional, default is true
      - name: setup windows build tools
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
          sdk: 10.0.20348.0
          # toolset: 14.11
      - name: Install Vulkan SDK
        uses: jakoch/install-vulkan-sdk-action@v1.0.0
        with:
          # You can set the Vulkan SDK version to download.
          # Defaults to latest version, if version not set.
          vulkan_version: 1.3.231.1
          optional_components: com.lunarg.vulkan.vma
          install_runtime: true
          cache: true
          stripdown: true
      - name: build zed
        run: |
          ls
          cd zed
          rustup target add wasm32-wasip1
          cargo run --release
      - name: cache build
        uses: actions/cache@v4
        if: ${{ always() }}
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo
      - name: test
        run: |
          cargo test --workspace
      - name: upload artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: zed-${{ matrix.arch }}
          path: ./target/release/zed.exe

